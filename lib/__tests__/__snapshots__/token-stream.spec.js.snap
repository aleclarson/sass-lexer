// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#next consumes returns and the next token 1`] = `
Array [
  "identifier",
  "hello",
  1,
  0,
]
`;

exports[`#next consumes returns and the next token 2`] = `
Array [
  "space",
  " ",
  1,
  5,
]
`;

exports[`#next tokens atrule works 1`] = `
Array [
  "atrule",
  "mixin",
  1,
  0,
]
`;

exports[`#next tokens comment single comment 1`] = `
Array [
  "comment",
  " Hello",
  1,
  0,
]
`;

exports[`#next tokens comment single comment 2`] = `
Array [
  "comment",
  "* Hello World ",
  1,
  0,
]
`;

exports[`#next tokens hex 3 digit (trailing invalid) 1`] = `
Array [
  "color_hex",
  "FF0",
  1,
  0,
]
`;

exports[`#next tokens hex 3 digit lowercase 1`] = `
Array [
  "color_hex",
  "ff0",
  1,
  0,
]
`;

exports[`#next tokens hex 3 digit uppercase 1`] = `
Array [
  "color_hex",
  "FF0",
  1,
  0,
]
`;

exports[`#next tokens hex 6 digit lowercase 1`] = `
Array [
  "color_hex",
  "ff0099",
  1,
  0,
]
`;

exports[`#next tokens hex 6 digit numbers 1`] = `
Array [
  "color_hex",
  "000000",
  1,
  0,
]
`;

exports[`#next tokens hex 6 digit uppercase 1`] = `
Array [
  "color_hex",
  "FF0099",
  1,
  0,
]
`;

exports[`#next tokens identifier checks for valid starting characters 1`] = `
Array [
  "identifier",
  "_hello",
  1,
  0,
]
`;

exports[`#next tokens identifier ignores invalid starting characters 1`] = `
Array [
  "number",
  "0",
  1,
  0,
]
`;

exports[`#next tokens number float (leading decimal) 1`] = `
Array [
  "number",
  ".3",
  1,
  0,
]
`;

exports[`#next tokens number float 1`] = `
Array [
  "number",
  "3.0",
  1,
  0,
]
`;

exports[`#next tokens number integer 1`] = `
Array [
  "number",
  "3",
  1,
  0,
]
`;

exports[`#next tokens operator + 1`] = `
Array [
  "operator",
  "+",
  1,
  0,
]
`;

exports[`#next tokens operator non-repeatable 1`] = `
Array [
  "operator",
  "+",
  1,
  0,
]
`;

exports[`#next tokens operator repeatable 1`] = `
Array [
  "operator",
  "&&",
  1,
  0,
]
`;

exports[`#next tokens operator repeatable followed by non-repeatable 1`] = `
Array [
  "operator",
  "&",
  1,
  0,
]
`;

exports[`#next tokens punctuation { 1`] = `
Array [
  "punctuation",
  "{",
  1,
  0,
]
`;

exports[`#next tokens sink 1 1`] = `
Array [
  Array [
    "punctuation",
    "(",
    1,
    0,
  ],
  Array [
    "variable",
    "var",
    1,
    1,
  ],
  Array [
    "punctuation",
    ")",
    1,
    5,
  ],
]
`;

exports[`#next tokens sink 2 1`] = `
Array [
  Array [
    "comment",
    " ($var)",
    1,
    0,
  ],
  Array [
    "space",
    "
",
    1,
    9,
  ],
  Array [
    "atrule",
    "mixin",
    2,
    0,
  ],
  Array [
    "space",
    " ",
    2,
    6,
  ],
  Array [
    "identifier",
    "myMixin",
    2,
    7,
  ],
]
`;

exports[`#next tokens space multiple spaces 1`] = `
Array [
  "space",
  "    ",
  1,
  0,
]
`;

exports[`#next tokens space single space 1`] = `
Array [
  "space",
  " ",
  1,
  0,
]
`;

exports[`#next tokens space whitespace characters 1`] = `
Array [
  "space",
  "

	  ",
  1,
  0,
]
`;

exports[`#next tokens string double quotes 1`] = `
Array [
  "string",
  "hello",
  1,
  0,
]
`;

exports[`#next tokens string escaped characters 1`] = `
Array [
  "string",
  "hello \\\\\\"world\\\\\\"",
  1,
  0,
]
`;

exports[`#next tokens string preserves escape characters 1`] = `
Array [
  Array [
    "identifier",
    "token",
    1,
    0,
  ],
  Array [
    "punctuation",
    "(",
    1,
    5,
  ],
  Array [
    "string",
    "",
    1,
    6,
  ],
  Array [
    "operator",
    "+",
    1,
    8,
  ],
  Array [
    "identifier",
    "myVar",
    1,
    9,
  ],
  Array [
    "operator",
    "+",
    1,
    14,
  ],
  Array [
    "string",
    "font(\\\\'world\\\\')",
    1,
    15,
  ],
  Array [
    "punctuation",
    ")",
    1,
    32,
  ],
]
`;

exports[`#next tokens string single quotes 1`] = `
Array [
  "string",
  "hello",
  1,
  0,
]
`;

exports[`#next tokens variable works 1`] = `
Array [
  "variable",
  "size",
  1,
  0,
]
`;

exports[`#peek returns the current token 1`] = `
Array [
  "identifier",
  "hello",
  1,
  0,
]
`;

exports[`#peek returns the current token with an offset 1`] = `
Array [
  "space",
  " ",
  1,
  5,
]
`;
